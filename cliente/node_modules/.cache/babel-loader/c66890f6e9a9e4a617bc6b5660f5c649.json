{"ast":null,"code":"var _jsxFileName = \"/Users/pereirapaula/Desktop/progra web chat/client/src/components/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport { useLocation } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\n\nconst Chat = () => {\n  _s();\n\n  const location = useLocation();\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const ENDPOINT = \"localhost:5000\";\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search); //seteamos los valores de name y room de acuerdo con lo que el user ha puesto\n\n    setName(name);\n    setRoom(room); //creamos el socket\n\n    socket = io(ENDPOINT);\n    socket.emit(\"join\", {\n      name,\n      room\n    }, _ref => {\n      let {\n        error\n      } = _ref;\n      alert(error);\n    });\n  }, [ENDPOINT, location.search]);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Hola\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Chat, \"GXd6EwkZITlS1DCLIwmlVAO9Udc=\", false, function () {\n  return [useLocation];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/pereirapaula/Desktop/progra web chat/client/src/components/Chat.js"],"names":["React","useState","useEffect","queryString","io","useLocation","socket","Chat","location","name","setName","room","setRoom","ENDPOINT","parse","search","emit","error","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,WAAT,QAA4B,cAA5B;;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMY,QAAQ,GAAG,gBAAjB;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAEO,MAAAA,IAAF;AAAQE,MAAAA;AAAR,QAAiBR,WAAW,CAACW,KAAZ,CAAkBN,QAAQ,CAACO,MAA3B,CAAvB,CADc,CAEd;;AACAL,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP,CAJc,CAKd;;AACAL,IAAAA,MAAM,GAAGF,EAAE,CAACS,QAAD,CAAX;AAEAP,IAAAA,MAAM,CAACU,IAAP,CAAY,MAAZ,EAAoB;AAAEP,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAApB,EAAoC,QAAe;AAAA,UAAd;AAAEM,QAAAA;AAAF,OAAc;AACjDC,MAAAA,KAAK,CAACD,KAAD,CAAL;AACD,KAFD;AAGD,GAXQ,EAWN,CAACJ,QAAD,EAAWL,QAAQ,CAACO,MAApB,CAXM,CAAT;AAYA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAnBD;;GAAMR,I;UACaF,W;;;KADbE,I;AAoBN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport { useLocation } from \"react-router\";\n\nlet socket;\n\nconst Chat = () => {\n  const location = useLocation();\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const ENDPOINT = \"localhost:5000\";\n\n  useEffect(() => {\n    const { name, room } = queryString.parse(location.search);\n    //seteamos los valores de name y room de acuerdo con lo que el user ha puesto\n    setName(name);\n    setRoom(room);\n    //creamos el socket\n    socket = io(ENDPOINT);\n\n    socket.emit(\"join\", { name, room }, ({ error }) => {\n      alert(error);\n    });\n  }, [ENDPOINT, location.search]);\n  return <h1>Hola</h1>;\n};\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}